// This is an autogenerated sketch file corresponding to
// the router's data path and is used to solve the Chipmunk compilation problem.
// program_file = /tmp/marple_new_flow_equivalent_9_canonicalizer_equivalent_0.sk num_pipeline_stages = 2
// num_alus_per_stage = 2
// num_phv_containers = 2

int[4] constant_vector = {0, 1, 2, 3};

int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_0_mux1_ctrl = 0;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_salu_config_0_0 = 1;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_0_immediate = 1;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_operand_mux_1_0_0_ctrl = 0;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_1_mux2_ctrl = 1;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_0_mux2_ctrl = 1;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_0_0_output_mux_global = 1;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_0_0_const_0_global = 2;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_0_0_Mux3_0_global = 0;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_0_opcode = 1;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_1_0_const_1_global = 1;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_1_mux2_ctrl = 0;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_1_mux1_ctrl = 0;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_1_mux1_ctrl = 1;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_1_0_Opt_1_global = 0;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_0_0_const_1_global = 1;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_1_0_const_0_global = 0;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_operand_mux_0_0_0_ctrl = 1;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_output_mux_phv_1_1_ctrl = 0;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_1_0_Mux3_1_global = 2;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_0_0_rel_op_0_global = 3;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_salu_config_1_0 = 0;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_0_0_Mux3_1_global = 2;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_0_mux1_ctrl = 0;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_1_0_Mux3_0_global = 1;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_0_immediate = 2;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_output_mux_phv_1_0_ctrl = 1;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_1_immediate = 3;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_1_mux3_ctrl = 0;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_1_0_rel_op_0_global = 3;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_0_0_Opt_1_global = 1;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_1_opcode = 14;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_0_opcode = 15;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_0_0_Opt_0_global = 0;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_0_mux2_ctrl = 0;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_1_opcode = 3;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_output_mux_phv_0_1_ctrl = 1;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_1_0_Opt_0_global = 1;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_1_immediate = 1;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_0_mux3_ctrl = 0;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_0_mux3_ctrl = 1;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_1_0_output_mux_global = 0;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_1_mux3_ctrl = 0;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_output_mux_phv_0_0_ctrl = 0;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_operand_mux_1_0_1_ctrl = 0;
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_operand_mux_0_0_1_ctrl = 0;

// Definitions of muxes and ALUs of the router
// Operand muxes for each ALU in each stage
// Total of 2 * 2 * 3 2-to-1 muxes
// The 3 is for two stateless operands and one stateful operand.

int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_operand_mux_0_0_0(int input0,int input1, int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_operand_mux_0_0_0_ctrl_local) {
    int mux_ctrl = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_operand_mux_0_0_0_ctrl_local;
    if (mux_ctrl == 0) {
      return input0;
    }


    else { return input1; }
}
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_operand_mux_0_0_1(int input0,int input1, int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_operand_mux_0_0_1_ctrl_local) {
    int mux_ctrl = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_operand_mux_0_0_1_ctrl_local;
    if (mux_ctrl == 0) {
      return input0;
    }


    else { return input1; }
}
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_operand_mux_1_0_0(int input0,int input1, int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_operand_mux_1_0_0_ctrl_local) {
    int mux_ctrl = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_operand_mux_1_0_0_ctrl_local;
    if (mux_ctrl == 0) {
      return input0;
    }


    else { return input1; }
}
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_operand_mux_1_0_1(int input0,int input1, int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_operand_mux_1_0_1_ctrl_local) {
    int mux_ctrl = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_operand_mux_1_0_1_ctrl_local;
    if (mux_ctrl == 0) {
      return input0;
    }


    else { return input1; }
}


// Output mux for each PHV container
// Allows the container to be written from either its own stateless ALU or any stateful ALU

int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_output_mux_phv_0_0(int input0,int input1, int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_output_mux_phv_0_0_ctrl_local) {
    int mux_ctrl = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_output_mux_phv_0_0_ctrl_local;
    if (mux_ctrl == 0) {
      return input0;
    }


    else { return input1; }
}
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_output_mux_phv_0_1(int input0,int input1, int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_output_mux_phv_0_1_ctrl_local) {
    int mux_ctrl = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_output_mux_phv_0_1_ctrl_local;
    if (mux_ctrl == 0) {
      return input0;
    }


    else { return input1; }
}
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_output_mux_phv_1_0(int input0,int input1, int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_output_mux_phv_1_0_ctrl_local) {
    int mux_ctrl = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_output_mux_phv_1_0_ctrl_local;
    if (mux_ctrl == 0) {
      return input0;
    }


    else { return input1; }
}
int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_output_mux_phv_1_1(int input0,int input1, int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_output_mux_phv_1_1_ctrl_local) {
    int mux_ctrl = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_output_mux_phv_1_1_ctrl_local;
    if (mux_ctrl == 0) {
      return input0;
    }


    else { return input1; }
}


// Definition for ALUs




int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_0_mux1(int input0,int input1, int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_0_mux1_ctrl_local) {
    int mux_ctrl = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_0_mux1_ctrl_local;
    if (mux_ctrl == 0) {
      return input0;
    }


    else { return input1; }
}int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_0_mux2(int input0,int input1, int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_0_mux2_ctrl_local) {
    int mux_ctrl = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_0_mux2_ctrl_local;
    if (mux_ctrl == 0) {
      return input0;
    }


    else { return input1; }
}int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_0_mux3(int input0,int input1, int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_0_mux3_ctrl_local) {
    int mux_ctrl = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_0_mux3_ctrl_local;
    if (mux_ctrl == 0) {
      return input0;
    }


    else { return input1; }
}int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_0(int input0,int input1,int opcode_hole_local,int immediate_operand_hole_local,	int mux1_ctrl_hole_local,	int mux2_ctrl_hole_local,	int mux3_ctrl_hole_local ){
	int opcode = opcode_hole_local;
	int immediate_operand = constant_vector[immediate_operand_hole_local];
	int pkt_0 = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_0_mux1(input0,input1,mux1_ctrl_hole_local);
	int pkt_1 = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_0_mux2(input0,input1,mux2_ctrl_hole_local);
	int pkt_2 = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_0_mux3(input0,input1,mux3_ctrl_hole_local);
	if (opcode==0) {
		return immediate_operand;
}
	else if (opcode==1) {
		return pkt_0+pkt_1;
}
	else if (opcode==2) {
		return pkt_0+immediate_operand;
}
	else if (opcode==3) {
		return pkt_0-pkt_1;
}
	else if (opcode==4) {
		return pkt_0-immediate_operand;
}
	else if (opcode==5) {
		return immediate_operand-pkt_0;
}
	else if (opcode==6) {
		return pkt_0!=pkt_1;
}
	else if (opcode==7) {
		return (pkt_0!=immediate_operand);
}
	else if (opcode==8) {
		return (pkt_0==pkt_1);
}
	else if (opcode==9) {
		return (pkt_0==immediate_operand);
}
	else if (opcode==10) {
		return (pkt_0>=pkt_1);
}
	else if (opcode==11) {
		return (pkt_0>=immediate_operand);
}
	else if (opcode==12) {
		return (pkt_0<pkt_1);
}
	else if (opcode==13) {
		return (pkt_0<immediate_operand);
}
	else if (opcode==14) {
	if (pkt_0!=0) {
		return pkt_1;
}
	else {
		return pkt_2;
}

}
	else if (opcode==15) {
	if (pkt_0!=0) {
		return pkt_1;
}
	else {
		return immediate_operand;
}

}
	else if (opcode==16) {
		return ((pkt_0!=0)||(pkt_1!=0));
}
	else if (opcode==17) {
		return ((pkt_0!=0)||(immediate_operand!=0));
}
	else if (opcode==18) {
		return ((pkt_0!=0)&&(pkt_1!=0));
}
	else if (opcode==19) {
		return ((pkt_0!=0)&&(immediate_operand!=0));
}
	else {
		return ((pkt_0==0));
}

}



int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_1_mux1(int input0,int input1, int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_1_mux1_ctrl_local) {
    int mux_ctrl = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_1_mux1_ctrl_local;
    if (mux_ctrl == 0) {
      return input0;
    }


    else { return input1; }
}int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_1_mux2(int input0,int input1, int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_1_mux2_ctrl_local) {
    int mux_ctrl = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_1_mux2_ctrl_local;
    if (mux_ctrl == 0) {
      return input0;
    }


    else { return input1; }
}int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_1_mux3(int input0,int input1, int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_1_mux3_ctrl_local) {
    int mux_ctrl = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_1_mux3_ctrl_local;
    if (mux_ctrl == 0) {
      return input0;
    }


    else { return input1; }
}int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_1(int input0,int input1,int opcode_hole_local,int immediate_operand_hole_local,	int mux1_ctrl_hole_local,	int mux2_ctrl_hole_local,	int mux3_ctrl_hole_local ){
	int opcode = opcode_hole_local;
	int immediate_operand = constant_vector[immediate_operand_hole_local];
	int pkt_0 = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_1_mux1(input0,input1,mux1_ctrl_hole_local);
	int pkt_1 = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_1_mux2(input0,input1,mux2_ctrl_hole_local);
	int pkt_2 = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_1_mux3(input0,input1,mux3_ctrl_hole_local);
	if (opcode==0) {
		return immediate_operand;
}
	else if (opcode==1) {
		return pkt_0+pkt_1;
}
	else if (opcode==2) {
		return pkt_0+immediate_operand;
}
	else if (opcode==3) {
		return pkt_0-pkt_1;
}
	else if (opcode==4) {
		return pkt_0-immediate_operand;
}
	else if (opcode==5) {
		return immediate_operand-pkt_0;
}
	else if (opcode==6) {
		return pkt_0!=pkt_1;
}
	else if (opcode==7) {
		return (pkt_0!=immediate_operand);
}
	else if (opcode==8) {
		return (pkt_0==pkt_1);
}
	else if (opcode==9) {
		return (pkt_0==immediate_operand);
}
	else if (opcode==10) {
		return (pkt_0>=pkt_1);
}
	else if (opcode==11) {
		return (pkt_0>=immediate_operand);
}
	else if (opcode==12) {
		return (pkt_0<pkt_1);
}
	else if (opcode==13) {
		return (pkt_0<immediate_operand);
}
	else if (opcode==14) {
	if (pkt_0!=0) {
		return pkt_1;
}
	else {
		return pkt_2;
}

}
	else if (opcode==15) {
	if (pkt_0!=0) {
		return pkt_1;
}
	else {
		return immediate_operand;
}

}
	else if (opcode==16) {
		return ((pkt_0!=0)||(pkt_1!=0));
}
	else if (opcode==17) {
		return ((pkt_0!=0)||(immediate_operand!=0));
}
	else if (opcode==18) {
		return ((pkt_0!=0)&&(pkt_1!=0));
}
	else if (opcode==19) {
		return ((pkt_0!=0)&&(immediate_operand!=0));
}
	else {
		return ((pkt_0==0));
}

}



int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_0_0_Opt_0(int op1, int enable) {
    if (enable != 0) return 0;
    return op1;
    } 

int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_0_0_C_0(int const) {
    return constant_vector[const];
    }

int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_0_0_Mux3_0(int op1, int op2, int op3, int choice) {
    if (choice == 0) return op1;
    else if (choice == 1) return op2;
    else return op3;
    } 

int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_0_0_rel_op_0(int operand1, int operand2, int opcode) {
    if (opcode == 0) {
      return (operand1 != operand2) ? 1 : 0;
    } else if (opcode == 1) {
      return (operand1 < operand2) ? 1 : 0;
    } else if (opcode == 2) {
      return (operand1 > operand2) ? 1 : 0;
    } else {
      return (operand1 == operand2) ? 1 : 0;
    }
    } 

int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_0_0_Opt_1(int op1, int enable) {
    if (enable != 0) return 0;
    return op1;
    } 

int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_0_0_C_1(int const) {
    return constant_vector[const];
    }

int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_0_0_Mux3_1(int op1, int op2, int op3, int choice) {
    if (choice == 0) return op1;
    else if (choice == 1) return op2;
    else return op3;
    } 

|StateGroup| marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_0_0(ref | StateGroup | state_group, int output_mux, int pkt_0,int pkt_1, int Mux3_0,int Mux3_1,int Opt_0,int Opt_1,int const_0,int const_1,int output_mux,int rel_op_0) {
 |StateGroup| old_state_group = state_group;
int state_0 = state_group.state_0;if (marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_0_0_rel_op_0(marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_0_0_Opt_0(state_0,Opt_0),marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_0_0_Mux3_0(pkt_0,pkt_1,marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_0_0_C_0(const_0),Mux3_0),rel_op_0) == 1) {state_0 = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_0_0_Opt_1(state_0,Opt_1)+marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_0_0_Mux3_1(pkt_0,pkt_1,marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_0_0_C_1(const_1),Mux3_1);}
state_group.state_0 = state_0;

if (output_mux == 1){
return old_state_group;
}else{
return state_group;
}

}



int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_0_mux1(int input0,int input1, int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_0_mux1_ctrl_local) {
    int mux_ctrl = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_0_mux1_ctrl_local;
    if (mux_ctrl == 0) {
      return input0;
    }


    else { return input1; }
}int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_0_mux2(int input0,int input1, int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_0_mux2_ctrl_local) {
    int mux_ctrl = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_0_mux2_ctrl_local;
    if (mux_ctrl == 0) {
      return input0;
    }


    else { return input1; }
}int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_0_mux3(int input0,int input1, int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_0_mux3_ctrl_local) {
    int mux_ctrl = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_0_mux3_ctrl_local;
    if (mux_ctrl == 0) {
      return input0;
    }


    else { return input1; }
}int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_0(int input0,int input1,int opcode_hole_local,int immediate_operand_hole_local,	int mux1_ctrl_hole_local,	int mux2_ctrl_hole_local,	int mux3_ctrl_hole_local ){
	int opcode = opcode_hole_local;
	int immediate_operand = constant_vector[immediate_operand_hole_local];
	int pkt_0 = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_0_mux1(input0,input1,mux1_ctrl_hole_local);
	int pkt_1 = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_0_mux2(input0,input1,mux2_ctrl_hole_local);
	int pkt_2 = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_0_mux3(input0,input1,mux3_ctrl_hole_local);
	if (opcode==0) {
		return immediate_operand;
}
	else if (opcode==1) {
		return pkt_0+pkt_1;
}
	else if (opcode==2) {
		return pkt_0+immediate_operand;
}
	else if (opcode==3) {
		return pkt_0-pkt_1;
}
	else if (opcode==4) {
		return pkt_0-immediate_operand;
}
	else if (opcode==5) {
		return immediate_operand-pkt_0;
}
	else if (opcode==6) {
		return pkt_0!=pkt_1;
}
	else if (opcode==7) {
		return (pkt_0!=immediate_operand);
}
	else if (opcode==8) {
		return (pkt_0==pkt_1);
}
	else if (opcode==9) {
		return (pkt_0==immediate_operand);
}
	else if (opcode==10) {
		return (pkt_0>=pkt_1);
}
	else if (opcode==11) {
		return (pkt_0>=immediate_operand);
}
	else if (opcode==12) {
		return (pkt_0<pkt_1);
}
	else if (opcode==13) {
		return (pkt_0<immediate_operand);
}
	else if (opcode==14) {
	if (pkt_0!=0) {
		return pkt_1;
}
	else {
		return pkt_2;
}

}
	else if (opcode==15) {
	if (pkt_0!=0) {
		return pkt_1;
}
	else {
		return immediate_operand;
}

}
	else if (opcode==16) {
		return ((pkt_0!=0)||(pkt_1!=0));
}
	else if (opcode==17) {
		return ((pkt_0!=0)||(immediate_operand!=0));
}
	else if (opcode==18) {
		return ((pkt_0!=0)&&(pkt_1!=0));
}
	else if (opcode==19) {
		return ((pkt_0!=0)&&(immediate_operand!=0));
}
	else {
		return ((pkt_0==0));
}

}



int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_1_mux1(int input0,int input1, int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_1_mux1_ctrl_local) {
    int mux_ctrl = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_1_mux1_ctrl_local;
    if (mux_ctrl == 0) {
      return input0;
    }


    else { return input1; }
}int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_1_mux2(int input0,int input1, int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_1_mux2_ctrl_local) {
    int mux_ctrl = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_1_mux2_ctrl_local;
    if (mux_ctrl == 0) {
      return input0;
    }


    else { return input1; }
}int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_1_mux3(int input0,int input1, int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_1_mux3_ctrl_local) {
    int mux_ctrl = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_1_mux3_ctrl_local;
    if (mux_ctrl == 0) {
      return input0;
    }


    else { return input1; }
}int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_1(int input0,int input1,int opcode_hole_local,int immediate_operand_hole_local,	int mux1_ctrl_hole_local,	int mux2_ctrl_hole_local,	int mux3_ctrl_hole_local ){
	int opcode = opcode_hole_local;
	int immediate_operand = constant_vector[immediate_operand_hole_local];
	int pkt_0 = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_1_mux1(input0,input1,mux1_ctrl_hole_local);
	int pkt_1 = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_1_mux2(input0,input1,mux2_ctrl_hole_local);
	int pkt_2 = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_1_mux3(input0,input1,mux3_ctrl_hole_local);
	if (opcode==0) {
		return immediate_operand;
}
	else if (opcode==1) {
		return pkt_0+pkt_1;
}
	else if (opcode==2) {
		return pkt_0+immediate_operand;
}
	else if (opcode==3) {
		return pkt_0-pkt_1;
}
	else if (opcode==4) {
		return pkt_0-immediate_operand;
}
	else if (opcode==5) {
		return immediate_operand-pkt_0;
}
	else if (opcode==6) {
		return pkt_0!=pkt_1;
}
	else if (opcode==7) {
		return (pkt_0!=immediate_operand);
}
	else if (opcode==8) {
		return (pkt_0==pkt_1);
}
	else if (opcode==9) {
		return (pkt_0==immediate_operand);
}
	else if (opcode==10) {
		return (pkt_0>=pkt_1);
}
	else if (opcode==11) {
		return (pkt_0>=immediate_operand);
}
	else if (opcode==12) {
		return (pkt_0<pkt_1);
}
	else if (opcode==13) {
		return (pkt_0<immediate_operand);
}
	else if (opcode==14) {
	if (pkt_0!=0) {
		return pkt_1;
}
	else {
		return pkt_2;
}

}
	else if (opcode==15) {
	if (pkt_0!=0) {
		return pkt_1;
}
	else {
		return immediate_operand;
}

}
	else if (opcode==16) {
		return ((pkt_0!=0)||(pkt_1!=0));
}
	else if (opcode==17) {
		return ((pkt_0!=0)||(immediate_operand!=0));
}
	else if (opcode==18) {
		return ((pkt_0!=0)&&(pkt_1!=0));
}
	else if (opcode==19) {
		return ((pkt_0!=0)&&(immediate_operand!=0));
}
	else {
		return ((pkt_0==0));
}

}



int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_1_0_Opt_0(int op1, int enable) {
    if (enable != 0) return 0;
    return op1;
    } 

int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_1_0_C_0(int const) {
    return constant_vector[const];
    }

int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_1_0_Mux3_0(int op1, int op2, int op3, int choice) {
    if (choice == 0) return op1;
    else if (choice == 1) return op2;
    else return op3;
    } 

int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_1_0_rel_op_0(int operand1, int operand2, int opcode) {
    if (opcode == 0) {
      return (operand1 != operand2) ? 1 : 0;
    } else if (opcode == 1) {
      return (operand1 < operand2) ? 1 : 0;
    } else if (opcode == 2) {
      return (operand1 > operand2) ? 1 : 0;
    } else {
      return (operand1 == operand2) ? 1 : 0;
    }
    } 

int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_1_0_Opt_1(int op1, int enable) {
    if (enable != 0) return 0;
    return op1;
    } 

int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_1_0_C_1(int const) {
    return constant_vector[const];
    }

int marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_1_0_Mux3_1(int op1, int op2, int op3, int choice) {
    if (choice == 0) return op1;
    else if (choice == 1) return op2;
    else return op3;
    } 

|StateGroup| marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_1_0(ref | StateGroup | state_group, int output_mux, int pkt_0,int pkt_1, int Mux3_0,int Mux3_1,int Opt_0,int Opt_1,int const_0,int const_1,int output_mux,int rel_op_0) {
 |StateGroup| old_state_group = state_group;
int state_0 = state_group.state_0;if (marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_1_0_rel_op_0(marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_1_0_Opt_0(state_0,Opt_0),marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_1_0_Mux3_0(pkt_0,pkt_1,marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_1_0_C_0(const_0),Mux3_0),rel_op_0) == 1) {state_0 = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_1_0_Opt_1(state_0,Opt_1)+marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_1_0_Mux3_1(pkt_0,pkt_1,marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_1_0_C_1(const_1),Mux3_1);}
state_group.state_0 = state_0;

if (output_mux == 1){
return old_state_group;
}else{
return state_group;
}

}

struct StateGroup {
    int state_0;
}

// Data type for holding result from spec and implementation
struct StateAndPacket {
    int pkt_0;
      int state_group_0_state_0;
}

// Specification
/* 
// Original program: 
int state_group_0_state_0 = 0;
struct Packet{
    int pkt_0;
};
void func(struct Packet p){
if (1==1&&1==1&&state_group_0_state_0==0&&1==1&&1==1) {state_group_0_state_0=1;
p.pkt_0=1;

;}
} */

|StateAndPacket| program (|StateAndPacket| state_and_packet) {
if (1==1&&1==1&&state_and_packet.state_group_0_state_0==0&&1==1&&1==1) {state_and_packet.state_group_0_state_0=1;
state_and_packet.pkt_0=1;

;}
  return state_and_packet;
}

// Implementation
  |StateAndPacket| pipeline (|StateAndPacket| state_and_packet) {
  // Any additional constraints to speed up synthesis through parallel execution.
  

  // Consolidate all constraints on holes here.
  assert((marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_0_opcode == 1)|| (marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_0_mux1_ctrl <= marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_0_mux2_ctrl));
assert((marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_1_opcode == 1)|| (marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_1_mux1_ctrl <= marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_1_mux2_ctrl));
assert((marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_0_opcode == 1)|| (marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_0_mux1_ctrl <= marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_0_mux2_ctrl));
assert((marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_1_opcode == 1)|| (marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_1_mux1_ctrl <= marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_1_mux2_ctrl));
assert((marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_salu_config_0_0 + 0) <= 2);
assert((marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_salu_config_1_0 + 0) <= 2);
assert((marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_salu_config_0_0 + marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_salu_config_1_0 + 0) <= 1);


  // One variable for each container in the PHV
  // Container i will be allocated to packet field i from the spec.
    int input_0_0 = 0;
    int input_0_1 = 0;

  // One variable for each stateful ALU's state operand
  // This will be allocated to a state variable from the program using indicator variables.
      |StateGroup| state_operand_salu_0_0 =  |StateGroup|(
                                                                                       state_0 = 0
                                                                                 );
      |StateGroup| state_operand_salu_1_0 =  |StateGroup|(
                                                                                       state_0 = 0
                                                                                 );

    /*********** Stage 0 *********/

    // Inputs
      // Read each PHV container from corresponding packet field.
        input_0_0 = state_and_packet.pkt_0;


    // Stateless ALUs
      int destination_0_0 = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_0(
          input_0_0,
          input_0_1
,

      marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_0_opcode,
      marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_0_immediate,
          marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_0_mux1_ctrl,

          marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_0_mux2_ctrl,

          marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_0_mux3_ctrl

      );
      int destination_0_1 = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_1(
          input_0_0,
          input_0_1
,

      marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_1_opcode,
      marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_1_immediate,
          marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_1_mux1_ctrl,

          marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_1_mux2_ctrl,

          marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_0_1_mux3_ctrl

      );

    // Stateful operands
        int packet_operand_salu0_0_0 = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_operand_mux_0_0_0(
            input_0_0,
            input_0_1
      , marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_operand_mux_0_0_0_ctrl);
        int packet_operand_salu0_0_1 = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_operand_mux_0_0_1(
            input_0_0,
            input_0_1
      , marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_operand_mux_0_0_1_ctrl);

    // Read stateful ALU slots from allocated state vars.
      if (marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_salu_config_0_0 == 1) {
        state_operand_salu_0_0 =
        |StateGroup|(                         state_0 = state_and_packet.state_group_0_state_0
);}

    // Stateful ALUs
      |StateGroup| old_state_group_0_0 = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_0_0(state_operand_salu_0_0, marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_0_0_output_mux_global,
        packet_operand_salu0_0_0,
        packet_operand_salu0_0_1,
      marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_0_0_Mux3_0_global,marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_0_0_Mux3_1_global,marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_0_0_Opt_0_global,marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_0_0_Opt_1_global,marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_0_0_const_0_global,marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_0_0_const_1_global,marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_0_0_output_mux_global,marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_0_0_rel_op_0_global);

    // Outputs
      int output_0_0 = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_output_mux_phv_0_0(
          old_state_group_0_0.state_0,
      destination_0_0,
      marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_output_mux_phv_0_0_ctrl
      );
      int output_0_1 = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_output_mux_phv_0_1(
          old_state_group_0_0.state_0,
      destination_0_1,
      marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_output_mux_phv_0_1_ctrl
      );

      // Write state_0
      if (marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_salu_config_0_0 == 1) {
          state_and_packet.state_group_0_state_0 = state_operand_salu_0_0.state_0;
      }

    /*********** Stage 1 *********/

    // Inputs
      // Input of this stage is the output of the previous one.
        int input_1_0 = output_0_0;
        int input_1_1 = output_0_1;


    // Stateless ALUs
      int destination_1_0 = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_0(
          input_1_0,
          input_1_1
,

      marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_0_opcode,
      marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_0_immediate,
          marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_0_mux1_ctrl,

          marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_0_mux2_ctrl,

          marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_0_mux3_ctrl

      );
      int destination_1_1 = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_1(
          input_1_0,
          input_1_1
,

      marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_1_opcode,
      marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_1_immediate,
          marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_1_mux1_ctrl,

          marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_1_mux2_ctrl,

          marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateless_alu_1_1_mux3_ctrl

      );

    // Stateful operands
        int packet_operand_salu1_0_0 = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_operand_mux_1_0_0(
            input_1_0,
            input_1_1
      , marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_operand_mux_1_0_0_ctrl);
        int packet_operand_salu1_0_1 = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_operand_mux_1_0_1(
            input_1_0,
            input_1_1
      , marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_operand_mux_1_0_1_ctrl);

    // Read stateful ALU slots from allocated state vars.
      if (marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_salu_config_1_0 == 1) {
        state_operand_salu_1_0 =
        |StateGroup|(                         state_0 = state_and_packet.state_group_0_state_0
);}

    // Stateful ALUs
      |StateGroup| old_state_group_1_0 = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_1_0(state_operand_salu_1_0, marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_1_0_output_mux_global,
        packet_operand_salu1_0_0,
        packet_operand_salu1_0_1,
      marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_1_0_Mux3_0_global,marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_1_0_Mux3_1_global,marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_1_0_Opt_0_global,marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_1_0_Opt_1_global,marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_1_0_const_0_global,marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_1_0_const_1_global,marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_1_0_output_mux_global,marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_stateful_alu_1_0_rel_op_0_global);

    // Outputs
      int output_1_0 = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_output_mux_phv_1_0(
          old_state_group_1_0.state_0,
      destination_1_0,
      marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_output_mux_phv_1_0_ctrl
      );
      int output_1_1 = marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_output_mux_phv_1_1(
          old_state_group_1_0.state_0,
      destination_1_1,
      marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_output_mux_phv_1_1_ctrl
      );

      // Write state_0
      if (marple_new_flow_equivalent_9_canonicalizer_equivalent_0_pred_raw_stateless_alu_2_2_salu_config_1_0 == 1) {
          state_and_packet.state_group_0_state_0 = state_operand_salu_1_0.state_0;
      }


    // Write pkt_0
    state_and_packet.pkt_0 = output_1_0;

  // Return updated packet fields and state vars
  return state_and_packet;
}

  harness void main(
    int pkt_0
        , int state_group_0_state_0
) {

    |StateAndPacket| x = |StateAndPacket|(      pkt_0 = pkt_0,
          state_group_0_state_0 = state_group_0_state_0
);

  |StateAndPacket| pipeline_result = pipeline(x);
  |StateAndPacket| program_result = program(x);

      assert(pipeline_result.state_group_0_state_0
      == program_result.state_group_0_state_0);

    assert(pipeline_result.pkt_0 == program_result.pkt_0);

  

  }
