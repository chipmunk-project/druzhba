// This is an autogenerated sketch file corresponding to
// the router's data path and is used to solve the Chipmunk compilation problem.
// program_file = /tmp/spam_detection_equivalent_5_canonicalizer_equivalent_1.sk num_pipeline_stages = 1
// num_alus_per_stage = 1
// num_phv_containers = 1

int[11] constant_vector = {0, 1, 2, 3, 4, 14, 723, 998, 999, 1000, 1013};

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_operand_mux_0_0_1_ctrl = 0;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_21_global = 3;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_5_global = 1;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_16_global = 0;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_output_mux_phv_0_0_ctrl = 3;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_arith_op_4_global = 0;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_operand_mux_0_0_4_ctrl = 0;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_arith_op_1_global = 0;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Opt_7_global = 1;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_6_global = 2;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_13_global = 3;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_1_global = 8;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateless_alu_0_0_mux1_ctrl = 0;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_3_global = 0;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_12_global = 2;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_18_global = 0;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_rel_op_1_global = 0;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_7_global = 2;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_arith_op_6_global = 0;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_operand_mux_0_0_3_ctrl = 0;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_output_mux_global = 1;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_0_global = 0;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_26_global = 3;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_17_global = 0;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_operand_mux_0_0_2_ctrl = 0;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_23_global = 2;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_11_global = 2;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Opt_6_global = 1;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_20_global = 3;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Opt_4_global = 1;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_2_global = 0;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_7_global = 0;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_8_global = 3;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_16_global = 0;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_24_global = 2;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Opt_0_global = 0;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_10_global = 2;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_15_global = 3;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_15_global = 0;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_salu_config_0_0 = 1;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_25_global = 2;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_rel_op_2_global = 3;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_rel_op_3_global = 3;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateless_alu_0_0_mux2_ctrl = 0;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_arith_op_7_global = 1;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_2_global = 1;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Opt_2_global = 0;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_3_global = 1;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_arith_op_3_global = 1;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_rel_op_0_global = 3;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_19_global = 3;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_10_global = 1;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Opt_5_global = 1;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_13_global = 0;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_27_global = 2;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Opt_3_global = 0;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_14_global = 0;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_operand_mux_0_0_0_ctrl = 0;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_6_global = 1;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_arith_op_5_global = 1;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_9_global = 2;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_0_global = 2;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_22_global = 2;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_arith_op_2_global = 0;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_8_global = 3;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_4_global = 0;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_11_global = 2;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_arith_op_0_global = 0;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_4_global = 1;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_17_global = 2;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_1_global = 0;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_14_global = 4;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_18_global = 4;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Opt_1_global = 0;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_12_global = 2;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateless_alu_0_0_mux3_ctrl = 0;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateless_alu_0_0_immediate = 0;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateless_alu_0_0_opcode = 14;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_19_global = 2;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_5_global = 0;
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_9_global = 3;

// Definitions of muxes and ALUs of the router
// Operand muxes for each ALU in each stage
// Total of 1 * 1 * 3 1-to-1 muxes
// The 3 is for two stateless operands and one stateful operand.

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_operand_mux_0_0_0(int input0, int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_operand_mux_0_0_0_ctrl_local) {
    return input0;
}
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_operand_mux_0_0_1(int input0, int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_operand_mux_0_0_1_ctrl_local) {
    return input0;
}
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_operand_mux_0_0_2(int input0, int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_operand_mux_0_0_2_ctrl_local) {
    return input0;
}
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_operand_mux_0_0_3(int input0, int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_operand_mux_0_0_3_ctrl_local) {
    return input0;
}
int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_operand_mux_0_0_4(int input0, int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_operand_mux_0_0_4_ctrl_local) {
    return input0;
}


// Output mux for each PHV container
// Allows the container to be written from either its own stateless ALU or any stateful ALU

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_output_mux_phv_0_0(int input0,int input1,int input2, int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_output_mux_phv_0_0_ctrl_local) {
    int mux_ctrl = spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_output_mux_phv_0_0_ctrl_local;
    if (mux_ctrl == 0) {
      return input0;
    }

      else if (mux_ctrl == 1) {
        return input1;
      }

    else { return input2; }
}


// Definition for ALUs




int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateless_alu_0_0_mux1(int input0, int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateless_alu_0_0_mux1_ctrl_local) {
    return input0;
}int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateless_alu_0_0_mux2(int input0, int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateless_alu_0_0_mux2_ctrl_local) {
    return input0;
}int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateless_alu_0_0_mux3(int input0, int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateless_alu_0_0_mux3_ctrl_local) {
    return input0;
}int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateless_alu_0_0(int input0,int opcode_hole_local,int immediate_operand_hole_local,	int mux1_ctrl_hole_local,	int mux2_ctrl_hole_local,	int mux3_ctrl_hole_local ){
	int immediate_operand = constant_vector[immediate_operand_hole_local];
	int opcode = opcode_hole_local;
	int pkt_0 = spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateless_alu_0_0_mux1(input0,mux1_ctrl_hole_local);
	int pkt_1 = spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateless_alu_0_0_mux2(input0,mux2_ctrl_hole_local);
	int pkt_2 = spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateless_alu_0_0_mux3(input0,mux3_ctrl_hole_local);
	if (opcode==0) {
		return immediate_operand;
}
	else if (opcode==1) {
		return pkt_0+pkt_1;
}
	else if (opcode==2) {
		return pkt_0+immediate_operand;
}
	else if (opcode==3) {
		return pkt_0-pkt_1;
}
	else if (opcode==4) {
		return pkt_0-immediate_operand;
}
	else if (opcode==5) {
		return immediate_operand-pkt_0;
}
	else if (opcode==6) {
		return pkt_0!=pkt_1;
}
	else if (opcode==7) {
		return (pkt_0!=immediate_operand);
}
	else if (opcode==8) {
		return (pkt_0==pkt_1);
}
	else if (opcode==9) {
		return (pkt_0==immediate_operand);
}
	else if (opcode==10) {
		return (pkt_0>=pkt_1);
}
	else if (opcode==11) {
		return (pkt_0>=immediate_operand);
}
	else if (opcode==12) {
		return (pkt_0<pkt_1);
}
	else if (opcode==13) {
		return (pkt_0<immediate_operand);
}
	else if (opcode==14) {
	if (pkt_0!=0) {
		return pkt_1;
}
	else {
		return pkt_2;
}

}
	else if (opcode==15) {
	if (pkt_0!=0) {
		return pkt_1;
}
	else {
		return immediate_operand;
}

}
	else if (opcode==16) {
		return ((pkt_0!=0)||(pkt_1!=0));
}
	else if (opcode==17) {
		return ((pkt_0!=0)||(immediate_operand!=0));
}
	else if (opcode==18) {
		return ((pkt_0!=0)&&(pkt_1!=0));
}
	else if (opcode==19) {
		return ((pkt_0!=0)&&(immediate_operand!=0));
}
	else {
		return ((pkt_0==0));
}

}



int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_0(int op1, int op2, int choice) {
    if (choice == 0) return op1;
    else if (choice == 1) return op2;
    else return 0;
}

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_1(int op1, int op2, int choice) {
    if (choice == 0) return op1;
    else if (choice == 1) return op2;
    else return 0;
}

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_2(int op1, int op2, int choice) {
    if (choice == 0) return op1;
    else if (choice == 1) return op2;
    else return 0;
}

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_0(int const) {
    return constant_vector[const];
    }

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_rel_op_0(int operand1, int operand2, int opcode) {
    if (opcode == 0) {
      return (operand1 != operand2) ? 1 : 0;
    } else if (opcode == 1) {
      return (operand1 < operand2) ? 1 : 0;
    } else if (opcode == 2) {
      return (operand1 > operand2) ? 1 : 0;
    } else {
      return (operand1 == operand2) ? 1 : 0;
    }
    } 

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_3(int op1, int op2, int choice) {
    if (choice == 0) return op1;
    else if (choice == 1) return op2;
    else return 0;
}

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_4(int op1, int op2, int choice) {
    if (choice == 0) return op1;
    else if (choice == 1) return op2;
    else return 0;
}

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_5(int op1, int op2, int choice) {
    if (choice == 0) return op1;
    else if (choice == 1) return op2;
    else return 0;
}

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_1(int const) {
    return constant_vector[const];
    }

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_rel_op_1(int operand1, int operand2, int opcode) {
    if (opcode == 0) {
      return (operand1 != operand2) ? 1 : 0;
    } else if (opcode == 1) {
      return (operand1 < operand2) ? 1 : 0;
    } else if (opcode == 2) {
      return (operand1 > operand2) ? 1 : 0;
    } else {
      return (operand1 == operand2) ? 1 : 0;
    }
    } 

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Opt_0(int op1, int enable) {
    if (enable != 0) return 0;
    return op1;
    } 

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_2(int const) {
    return constant_vector[const];
    }

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_6(int op1, int op2, int op3, int choice) {
    if (choice == 0) return op1;
    else if (choice == 1) return op2;
    else return op3;
    } 

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_3(int const) {
    return constant_vector[const];
    }

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_7(int op1, int op2, int op3, int choice) {
    if (choice == 0) return op1;
    else if (choice == 1) return op2;
    else return op3;
    } 

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_arith_op_0(int operand1, int operand2, int opcode) {
    if (opcode == 0) {
      return operand1 + operand2;
    } else {
      return operand1 - operand2;
    }
    }

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Opt_1(int op1, int enable) {
    if (enable != 0) return 0;
    return op1;
    } 

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_4(int const) {
    return constant_vector[const];
    }

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_8(int op1, int op2, int op3, int choice) {
    if (choice == 0) return op1;
    else if (choice == 1) return op2;
    else return op3;
    } 

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_5(int const) {
    return constant_vector[const];
    }

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_9(int op1, int op2, int op3, int choice) {
    if (choice == 0) return op1;
    else if (choice == 1) return op2;
    else return op3;
    } 

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_arith_op_1(int operand1, int operand2, int opcode) {
    if (opcode == 0) {
      return operand1 + operand2;
    } else {
      return operand1 - operand2;
    }
    }

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Opt_2(int op1, int enable) {
    if (enable != 0) return 0;
    return op1;
    } 

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_6(int const) {
    return constant_vector[const];
    }

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_10(int op1, int op2, int op3, int choice) {
    if (choice == 0) return op1;
    else if (choice == 1) return op2;
    else return op3;
    } 

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_7(int const) {
    return constant_vector[const];
    }

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_11(int op1, int op2, int op3, int choice) {
    if (choice == 0) return op1;
    else if (choice == 1) return op2;
    else return op3;
    } 

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_arith_op_2(int operand1, int operand2, int opcode) {
    if (opcode == 0) {
      return operand1 + operand2;
    } else {
      return operand1 - operand2;
    }
    }

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Opt_3(int op1, int enable) {
    if (enable != 0) return 0;
    return op1;
    } 

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_8(int const) {
    return constant_vector[const];
    }

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_12(int op1, int op2, int op3, int choice) {
    if (choice == 0) return op1;
    else if (choice == 1) return op2;
    else return op3;
    } 

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_9(int const) {
    return constant_vector[const];
    }

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_13(int op1, int op2, int op3, int choice) {
    if (choice == 0) return op1;
    else if (choice == 1) return op2;
    else return op3;
    } 

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_arith_op_3(int operand1, int operand2, int opcode) {
    if (opcode == 0) {
      return operand1 + operand2;
    } else {
      return operand1 - operand2;
    }
    }

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_14(int op1, int op2, int choice) {
    if (choice == 0) return op1;
    else if (choice == 1) return op2;
    else return 0;
}

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_15(int op1, int op2, int choice) {
    if (choice == 0) return op1;
    else if (choice == 1) return op2;
    else return 0;
}

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_16(int op1, int op2, int choice) {
    if (choice == 0) return op1;
    else if (choice == 1) return op2;
    else return 0;
}

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_10(int const) {
    return constant_vector[const];
    }

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_rel_op_2(int operand1, int operand2, int opcode) {
    if (opcode == 0) {
      return (operand1 != operand2) ? 1 : 0;
    } else if (opcode == 1) {
      return (operand1 < operand2) ? 1 : 0;
    } else if (opcode == 2) {
      return (operand1 > operand2) ? 1 : 0;
    } else {
      return (operand1 == operand2) ? 1 : 0;
    }
    } 

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_17(int op1, int op2, int choice) {
    if (choice == 0) return op1;
    else if (choice == 1) return op2;
    else return 0;
}

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_18(int op1, int op2, int choice) {
    if (choice == 0) return op1;
    else if (choice == 1) return op2;
    else return 0;
}

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_19(int op1, int op2, int choice) {
    if (choice == 0) return op1;
    else if (choice == 1) return op2;
    else return 0;
}

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_11(int const) {
    return constant_vector[const];
    }

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_rel_op_3(int operand1, int operand2, int opcode) {
    if (opcode == 0) {
      return (operand1 != operand2) ? 1 : 0;
    } else if (opcode == 1) {
      return (operand1 < operand2) ? 1 : 0;
    } else if (opcode == 2) {
      return (operand1 > operand2) ? 1 : 0;
    } else {
      return (operand1 == operand2) ? 1 : 0;
    }
    } 

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Opt_4(int op1, int enable) {
    if (enable != 0) return 0;
    return op1;
    } 

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_12(int const) {
    return constant_vector[const];
    }

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_20(int op1, int op2, int op3, int choice) {
    if (choice == 0) return op1;
    else if (choice == 1) return op2;
    else return op3;
    } 

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_13(int const) {
    return constant_vector[const];
    }

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_21(int op1, int op2, int op3, int choice) {
    if (choice == 0) return op1;
    else if (choice == 1) return op2;
    else return op3;
    } 

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_arith_op_4(int operand1, int operand2, int opcode) {
    if (opcode == 0) {
      return operand1 + operand2;
    } else {
      return operand1 - operand2;
    }
    }

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Opt_5(int op1, int enable) {
    if (enable != 0) return 0;
    return op1;
    } 

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_14(int const) {
    return constant_vector[const];
    }

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_22(int op1, int op2, int op3, int choice) {
    if (choice == 0) return op1;
    else if (choice == 1) return op2;
    else return op3;
    } 

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_15(int const) {
    return constant_vector[const];
    }

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_23(int op1, int op2, int op3, int choice) {
    if (choice == 0) return op1;
    else if (choice == 1) return op2;
    else return op3;
    } 

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_arith_op_5(int operand1, int operand2, int opcode) {
    if (opcode == 0) {
      return operand1 + operand2;
    } else {
      return operand1 - operand2;
    }
    }

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Opt_6(int op1, int enable) {
    if (enable != 0) return 0;
    return op1;
    } 

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_16(int const) {
    return constant_vector[const];
    }

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_24(int op1, int op2, int op3, int choice) {
    if (choice == 0) return op1;
    else if (choice == 1) return op2;
    else return op3;
    } 

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_17(int const) {
    return constant_vector[const];
    }

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_25(int op1, int op2, int op3, int choice) {
    if (choice == 0) return op1;
    else if (choice == 1) return op2;
    else return op3;
    } 

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_arith_op_6(int operand1, int operand2, int opcode) {
    if (opcode == 0) {
      return operand1 + operand2;
    } else {
      return operand1 - operand2;
    }
    }

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Opt_7(int op1, int enable) {
    if (enable != 0) return 0;
    return op1;
    } 

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_18(int const) {
    return constant_vector[const];
    }

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_26(int op1, int op2, int op3, int choice) {
    if (choice == 0) return op1;
    else if (choice == 1) return op2;
    else return op3;
    } 

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_19(int const) {
    return constant_vector[const];
    }

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_27(int op1, int op2, int op3, int choice) {
    if (choice == 0) return op1;
    else if (choice == 1) return op2;
    else return op3;
    } 

int spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_arith_op_7(int operand1, int operand2, int opcode) {
    if (opcode == 0) {
      return operand1 + operand2;
    } else {
      return operand1 - operand2;
    }
    }

|StateGroup| spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0(ref | StateGroup | state_group, int output_mux, int pkt_1,int pkt_2,int pkt_3,int pkt_4,int pkt_5, int Mux3_0,int Mux3_1,int Mux3_10,int Mux3_11,int Mux3_12,int Mux3_13,int Mux3_14,int Mux3_15,int Mux3_16,int Mux3_17,int Mux3_18,int Mux3_19,int Mux3_2,int Mux3_20,int Mux3_21,int Mux3_22,int Mux3_23,int Mux3_24,int Mux3_25,int Mux3_26,int Mux3_27,int Mux3_3,int Mux3_4,int Mux3_5,int Mux3_6,int Mux3_7,int Mux3_8,int Mux3_9,int Opt_0,int Opt_1,int Opt_2,int Opt_3,int Opt_4,int Opt_5,int Opt_6,int Opt_7,int arith_op_0,int arith_op_1,int arith_op_2,int arith_op_3,int arith_op_4,int arith_op_5,int arith_op_6,int arith_op_7,int const_0,int const_1,int const_10,int const_11,int const_12,int const_13,int const_14,int const_15,int const_16,int const_17,int const_18,int const_19,int const_2,int const_3,int const_4,int const_5,int const_6,int const_7,int const_8,int const_9,int output_mux,int rel_op_0,int rel_op_1,int rel_op_2,int rel_op_3) {
 |StateGroup| old_state_group = state_group;
int state_0 = state_group.state_0;
int state_1 = state_group.state_1;if (spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_rel_op_0(spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_0(state_0,state_1,Mux3_0)+spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_1(pkt_1,pkt_2,Mux3_1)-spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_2(pkt_1,pkt_2,Mux3_2),spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_0(const_0),rel_op_0) == 1) {if (spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_rel_op_1(spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_3(state_0,state_1,Mux3_3)+spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_4(pkt_1,pkt_2,Mux3_4)-spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_5(pkt_1,pkt_2,Mux3_5),spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_1(const_1),rel_op_1) == 1) {state_0 = spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Opt_0(state_0,Opt_0)+spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_arith_op_0(spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_6(pkt_1,pkt_2,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_2(const_2),Mux3_6),spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_7(pkt_1,pkt_2,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_3(const_3),Mux3_7),arith_op_0);state_1 = spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Opt_1(state_1,Opt_1)+spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_arith_op_1(spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_8(pkt_1,pkt_2,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_4(const_4),Mux3_8),spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_9(pkt_1,pkt_2,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_5(const_5),Mux3_9),arith_op_1);}else {state_0 = spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Opt_2(state_0,Opt_2)+spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_arith_op_2(spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_10(pkt_1,pkt_2,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_6(const_6),Mux3_10),spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_11(pkt_1,pkt_2,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_7(const_7),Mux3_11),arith_op_2);state_1 = spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Opt_3(state_1,Opt_3)+spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_arith_op_3(spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_12(pkt_1,pkt_2,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_8(const_8),Mux3_12),spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_13(pkt_1,pkt_2,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_9(const_9),Mux3_13),arith_op_3);}}else if (spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_rel_op_2(spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_14(state_0,state_1,Mux3_14)+spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_15(pkt_1,pkt_2,Mux3_15)-spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_16(pkt_1,pkt_2,Mux3_16),spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_10(const_10),rel_op_2) == 1) {if (spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_rel_op_3(spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_17(state_0,state_1,Mux3_17)+spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_18(pkt_1,pkt_2,Mux3_18)-spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_19(pkt_1,pkt_2,Mux3_19),spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_11(const_11),rel_op_3) == 1) {state_0 = spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Opt_4(state_0,Opt_4)+spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_arith_op_4(spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_20(pkt_1,pkt_2,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_12(const_12),Mux3_20),spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_21(pkt_1,pkt_2,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_13(const_13),Mux3_21),arith_op_4);state_1 = spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Opt_5(state_1,Opt_5)+spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_arith_op_5(spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_22(pkt_1,pkt_2,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_14(const_14),Mux3_22),spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_23(pkt_1,pkt_2,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_15(const_15),Mux3_23),arith_op_5);}else {state_0 = spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Opt_6(state_0,Opt_6)+spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_arith_op_6(spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_24(pkt_1,pkt_2,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_16(const_16),Mux3_24),spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_25(pkt_1,pkt_2,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_17(const_17),Mux3_25),arith_op_6);state_1 = spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Opt_7(state_1,Opt_7)+spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_arith_op_7(spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_26(pkt_1,pkt_2,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_18(const_18),Mux3_26),spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_27(pkt_1,pkt_2,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_C_19(const_19),Mux3_27),arith_op_7);}}
state_group.state_0 = state_0;
state_group.state_1 = state_1;

if (output_mux == 1){
return old_state_group;
}else{
return state_group;
}

}

struct StateGroup {
    int state_0;
    int state_1;
}

// Data type for holding result from spec and implementation
struct StateAndPacket {
    int pkt_0;
      int state_group_0_state_0;
      int state_group_0_state_1;
}

// Specification
/* 
// Original program: 
struct Packet{
    int pkt_0;
};
int state_group_0_state_1 = {0};
int state_group_0_state_0 = {1};
void func(struct Packet p){
p.pkt_0=p.pkt_0;
if (1==1&&state_group_0_state_0==1&&1==1&&1==1) {state_group_0_state_0=2;
state_group_0_state_1=0;

;}
if (1==1&&state_group_0_state_0==2&&1==1&&1==1) {state_group_0_state_1=state_group_0_state_1+1;
if (1==1&&state_group_0_state_1==1000&&1==1&&1==1) {state_group_0_state_0=3;

;}

;}
} */

|StateAndPacket| program (|StateAndPacket| state_and_packet) {
state_and_packet.pkt_0=state_and_packet.pkt_0;
if (1==1&&state_and_packet.state_group_0_state_0==1&&1==1&&1==1) {state_and_packet.state_group_0_state_0=2;
state_and_packet.state_group_0_state_1=0;

;}
if (1==1&&state_and_packet.state_group_0_state_0==2&&1==1&&1==1) {state_and_packet.state_group_0_state_1=state_and_packet.state_group_0_state_1+1;
if (1==1&&state_and_packet.state_group_0_state_1==1000&&1==1&&1==1) {state_and_packet.state_group_0_state_0=3;

;}

;}
  return state_and_packet;
}

// Implementation
  |StateAndPacket| pipeline (|StateAndPacket| state_and_packet) {
  // Any additional constraints to speed up synthesis through parallel execution.
  

  // Consolidate all constraints on holes here.
  assert((spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateless_alu_0_0_opcode == 1)|| (spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateless_alu_0_0_mux1_ctrl <= spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateless_alu_0_0_mux2_ctrl));
assert((spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_salu_config_0_0 + 0) <= 1);
assert((spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_salu_config_0_0 + 0) <= 1);


  // One variable for each container in the PHV
  // Container i will be allocated to packet field i from the spec.
    int input_0_0 = 0;

  // One variable for each stateful ALU's state operand
  // This will be allocated to a state variable from the program using indicator variables.
      |StateGroup| state_operand_salu_0_0 =  |StateGroup|(
                                                                                       state_0 = 0,
                                                                                       state_1 = 0
                                                                                 );

    /*********** Stage 0 *********/

    // Inputs
      // Read each PHV container from corresponding packet field.
        input_0_0 = state_and_packet.pkt_0;


    // Stateless ALUs
      int destination_0_0 = spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateless_alu_0_0(
          input_0_0
,

      spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateless_alu_0_0_opcode,
      spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateless_alu_0_0_immediate,
          spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateless_alu_0_0_mux1_ctrl,

          spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateless_alu_0_0_mux2_ctrl,

          spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateless_alu_0_0_mux3_ctrl

      );

    // Stateful operands
        int packet_operand_salu0_0_0 = spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_operand_mux_0_0_0(
            input_0_0
      , spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_operand_mux_0_0_0_ctrl);
        int packet_operand_salu0_0_1 = spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_operand_mux_0_0_1(
            input_0_0
      , spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_operand_mux_0_0_1_ctrl);
        int packet_operand_salu0_0_2 = spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_operand_mux_0_0_2(
            input_0_0
      , spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_operand_mux_0_0_2_ctrl);
        int packet_operand_salu0_0_3 = spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_operand_mux_0_0_3(
            input_0_0
      , spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_operand_mux_0_0_3_ctrl);
        int packet_operand_salu0_0_4 = spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_operand_mux_0_0_4(
            input_0_0
      , spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_operand_mux_0_0_4_ctrl);

    // Read stateful ALU slots from allocated state vars.
      if (spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_salu_config_0_0 == 1) {
        state_operand_salu_0_0 =
        |StateGroup|(                         state_0 = state_and_packet.state_group_0_state_0,
                         state_1 = state_and_packet.state_group_0_state_1
);}

    // Stateful ALUs
      |StateGroup| old_state_group_0_0 = spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0(state_operand_salu_0_0, spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_output_mux_global,
        packet_operand_salu0_0_0,
        packet_operand_salu0_0_1,
        packet_operand_salu0_0_2,
        packet_operand_salu0_0_3,
        packet_operand_salu0_0_4,
      spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_0_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_1_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_10_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_11_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_12_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_13_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_14_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_15_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_16_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_17_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_18_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_19_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_2_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_20_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_21_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_22_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_23_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_24_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_25_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_26_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_27_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_3_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_4_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_5_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_6_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_7_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_8_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Mux3_9_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Opt_0_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Opt_1_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Opt_2_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Opt_3_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Opt_4_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Opt_5_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Opt_6_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_Opt_7_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_arith_op_0_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_arith_op_1_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_arith_op_2_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_arith_op_3_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_arith_op_4_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_arith_op_5_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_arith_op_6_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_arith_op_7_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_0_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_1_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_10_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_11_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_12_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_13_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_14_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_15_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_16_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_17_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_18_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_19_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_2_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_3_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_4_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_5_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_6_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_7_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_8_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_const_9_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_output_mux_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_rel_op_0_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_rel_op_1_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_rel_op_2_global,spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_stateful_alu_0_0_rel_op_3_global);

    // Outputs
      int output_0_0 = spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_output_mux_phv_0_0(
          old_state_group_0_0.state_0,
          old_state_group_0_0.state_1,
      destination_0_0,
      spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_output_mux_phv_0_0_ctrl
      );

      // Write state_0
      if (spam_detection_equivalent_5_canonicalizer_equivalent_1_pair_stateless_alu_1_1_salu_config_0_0 == 1) {
          state_and_packet.state_group_0_state_0 = state_operand_salu_0_0.state_0;
          state_and_packet.state_group_0_state_1 = state_operand_salu_0_0.state_1;
      }


    // Write pkt_0
    state_and_packet.pkt_0 = output_0_0;

  // Return updated packet fields and state vars
  return state_and_packet;
}

  harness void main(
    int pkt_0
        , int state_group_0_state_0
        , int state_group_0_state_1
) {

    |StateAndPacket| x = |StateAndPacket|(      pkt_0 = pkt_0,
          state_group_0_state_0 = state_group_0_state_0,
          state_group_0_state_1 = state_group_0_state_1
);

  |StateAndPacket| pipeline_result = pipeline(x);
  |StateAndPacket| program_result = program(x);

      assert(pipeline_result.state_group_0_state_0
      == program_result.state_group_0_state_0);
      assert(pipeline_result.state_group_0_state_1
      == program_result.state_group_0_state_1);

    assert(pipeline_result.pkt_0 == program_result.pkt_0);

  

  }
